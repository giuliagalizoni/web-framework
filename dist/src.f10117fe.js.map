{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;ADOA,IAAA,IAAA;ACLA,ADKA,ICLM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS;ADKtB,ECLwB,IAAI,EAAE,IDK9B,ICLsB;EAAkB,ADQtC,GCRyC,EAAE,IDQ3C,IAAA,CAAoB,IAApB,EAAmC;ACRf,CAAT,CAAb,EDQsB,KAAA,IAAA,GAAA,IAAA;ACNtB,IAAI,ADIF,CCJG,GAAL,CAAS,ADIP,MAAA,GAAwC,EAAxC;ECJS,ADM8B,ICN1B,EAAE;AAAR,CAAT;AAEA,EDME,ECNE,CAAC,CDMH,CCNF,ADME,CCNM,QAAR,ADME,CAAA,CCNgB,EDMhB,GAAA,OCNgB,GDMZ,QAAJ,EAAoB;ECLpB,EDME,KCNK,CAAC,CDMC,ECNT,CAAY,EDME,IAAL,CAAU,ICNnB,IDMS,CAAP;ACLH,CAFD,CDQG,CAFD;ACHF,IAAI,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;EAChB,ADMA,IAAA,CAAA,ECNO,CAAC,GAAR,CAAY,EDMZ,CAAA,GAAA,GAAA,ECNA,QDMI,MAAJ,EAAqB;ACLtB,CAFD,GDQI,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,MAAzB;ACLJ,EDMG,CAFD,CCJE,CAAC,EAAL,CAAQ,MAAR,EAAgB,YAAA;EACd,OAAO,CAAC,GAAR,CAAY,oBAAZ;AACD,CAFD,CDQE,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAwC;ACJ1C,IAAI,ADKA,CCLC,GDKK,ICLV,CAAa,GDKK,GAAG,KAAK,CCL1B,KDKqB,CAAY,SAAZ,KAA0B,EAA3C;IACA,QAAQ,CAAC,IAAT,CAAc,QAAd;IACA,KAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;EACD,CAJD;;EAMA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;IACvB,IAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;;IAEA,IAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAArC,EAAwC;MACtC;IACD;;IAED,QAAQ,CAAC,OAAT,CAAiB,UAAC,QAAD,EAAS;MACxB,QAAQ;IACT,CAFD;EAGD,CAVD;;EAWF,OAAA,IAAA;AA9BA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\n  name?: string;\n  age?: number;\n}\n\ntype Callback = () => void;\n\nexport class User {\n  events: { [key: string]: Callback[] } = {};\n\n  constructor(private data: UserProps) {}\n\n  get(propName: string): string | number {\n    return this.data[propName];\n  }\n\n  set(update: UserProps): void {\n    Object.assign(this.data, update);\n  }\n\n  on(eventName: string, callback: Callback): void {\n    const handlers = this.events[eventName] || [];\n    handlers.push(callback);\n    this.events[eventName] = handlers;\n  }\n\n  trigger(eventName: string): void {\n    const handlers = this.events[eventName];\n\n    if (!handlers || handlers.length === 0) {\n      return;\n    }\n\n    handlers.forEach((callback) => {\n      callback();\n    });\n  }\n}\n","import { User } from './models/User';\n\nconst user = new User({ name: 'myname', age: 20 });\n\nuser.set({ name: 'newname' });\n\nuser.on('change', () => {\n  console.log('Change #1');\n});\nuser.on('change', () => {\n  console.log('Change #2');\n});\nuser.on('save', () => {\n  console.log('Save was triggered');\n});\n\nuser.trigger('dsofaisdfh');\n"]}